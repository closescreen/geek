#!/usr/bin/env bash
#> Удаление старых данных.


(
set -u
set +x
set -o pipefail
cd `dirname $0`


source_deep=`conf 00_conf.txt source_deep` # сколько дней назад требуется данных для отчетов
chk "$source_deep" "source_deep" || exit 1

report_deep=`conf 00_conf.txt report_deep` # на сколько дней назад пересчитываются отчеты
chk "$report_deep" "report_deep" || exit 1

# Для пересчета за неделю отчета с источниками за месяц требуется неделя+цесяц. 
first_deep_day=$( hours -d=today -shift=-"$report_deep" -n=-"$source_deep" -days -first )
chk "$first_deep_day" "first_deep_day" || exit 1

# сколько дополнительно дней еще подержать данные, для подстраховки ( "1day" .. 30days ). 
# Настраивать в зависимости 1)от места на диске, 2)от степени отставания отчетов от реального времени:
safe_period="14days"

# День, старее которого безопасно стирать источники: source_deep + report_deep + safe_period:
safe_deep_day=$( hours -d="$first_deep_day" -n=-"$safe_period" -days -first )
chk "$safe_deep_day" "safe_deep_day" || exit 1

#>> Удаление данных, для экономии места.


#-----часовые данные ----
jobs="google ssp_sites net_sites"
typenums="0 1 3"

for job in $jobs; do
 for tn in $typenums; do
    # часовые данные:
  ff=`find ../RESULT/10/  -type f -wholename "*/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/$job/$tn/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9].gz" |
  only -near=total.gz |
  only -older=4days`
  [[ -n "$ff" ]] && rm $ff

 done
done

# крупные google/3/total.gz:
job="google"
tn=3
ff=`find ../RESULT/10 -type f -wholename "*/$job/$tn/total.gz" |
    only -older="$report_deep" |
    only -near=bids.gz |
    only -near=sessions.gz |
    only -near=pzbt.gz |
    only -near=urls.gz |
    only -near=uidsz.gz |
    only -near=sz_vars_30days.gz`
[[ -n "$ff" ]] && rm $ff


#----------- старые /RESULT/10 ----
# Удаление ЛЮБЫХ данных /RESULT/10/$day/$job/$typenum, старее указанного
oldff=`find ../RESULT/10/ -name "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]" -type d |
 only --older="$safe_deep_day"`
[[ -n "$oldff" ]] && rm -rf $oldff


#----------- старые ../RESULT/traits_copy ----
# Удаление traits_copy
oldff=`find ../RESULT/traits_copy/ -name "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]" -type d | 
 only -having='s|traits_copy/(\d\d\d\d-\d\d-\d\d)|10/$1/google/3/sz_vars_30days.gz|' | 
 only -older="$safe_deep_day"`
[[ -n "$oldff" ]] && rm -rf $oldff


#----------- пустые *.gz == 20байт ( моложе 3 дней ) ----------
emptyff=`find ../RESULT/ -type f -name "*.gz" | only -sizele=20 | only -younger=3days`
[[ -n "$emptyff" ]] && echo -e "Found empty files: $emptyff \n -will removed." && rm $emptyff

# ---- google/3/urls30days.gz --------
old_urls30days_ff=`find ../RESULT -wholename "*/3/urls[0-9][0-9]days.gz" |
 only --older=1days |
 only -near=url_groups.gz`
[[ -n "$old_urls30days_ff" ]] && rm $old_urls30days_ff

)>>"$0.log" 2>&1
