#!/usr/bin/env bash
#> total(tn3) ----( ./14_process )---> bids(tn3)
(
set -u
set +x
set -o pipefail
cd `dirname $0`

#>:параметр:
job=${1:?Job!} # google 
days=${2:-""}
deb=${3-""} # можно указать deb и читать лог

[[ -n "$deb" ]] && set -x

#> для разных $job разные источники:
typenum=$(
    href -dict="
	net_sites => '0',
    " -default="3" -value="$job"
)

#> script может отличаться для разных job:
scriptname=$(
    href -dict="
	net_sites => './14_process_net_sites'
    " -defa='./14_process_google' -val="$job"
)

# вариант без симлинков:
# если нет total.gz, может быть есть total_NN_hours.gz - нецеликовые файлы. 
#> ( неполные total используются только если не осталось полных тоталов - .т.е. в последнюю очередь ):
#stems="total.gz total_23_hours.gz total_22_hours.gz"    

# либо берем файлы за указанные дни, либо если не указаны - находим непосчитанные bids:

#if [[ -n "$days" ]]; then
#    for stem in $stems; do
#	ff=`echo $days | files "../RESULT/10/%F/$job/$typenum/$stem" | only -s`
#	[[ -n "$ff" ]] && break
#    done
#else
#    for stem in $stems; do
#	ff=`find ../RESULT/10 -wholename "*/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/$job/$typenum/$stem" | sort | only --without="bids.gz"`
#	[[ -n "$ff" ]] && break
#    done
#fi

if [[ -n "$days" ]]; then
	ff=`echo $days | files "../RESULT/10/%F/$job/$typenum/total.gz" | only -s`
else
	ff=`find ../RESULT/10 -wholename "*/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/$job/$typenum/total.gz" | sort | only --without="bids.gz"`
fi

    
echo "$ff" | washing -res="s|total.*?\.gz|bids.gz|" -v_flag="zcat %s | $scriptname" -comp=gzip -timelog="$0.time.log"

)>>"$0.log" 2>&1
