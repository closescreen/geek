#!/usr/bin/env bash
#> Суммы счетчиков за N дней по файлам urls.gz
set -u
set +x
set -o pipefail
#>: параметр (имя вх файла):
src_file=${1:?Src file!} # f.e...../urls.gz

#>: параметр (job):
job=${2:?Job!} # f.e. google

#>: парам:
typenum=${3:?typenum!}

#>: параметр (days):
mimN=${4:? minN Days!} # f.e. 5. За сколько дней суммировать minimum
maxN=${5:? maxN days!} # f.e. 30

day=`fn2days $src_file`

ff=$( hours -t="${day}T00" -shift=1day -n=-"$maxN"days -days -comm="<---$maxN, at possible, days with $day included." |
 files "../RESULT/10/%F/$job/$typenum/urls.gz" )
ff=$( echo "$ff" | only -s | only -sizegt=20 )

# реальное количество urls.gz, которые мержим:
realN=`echo "$ff" | words -count`
# реальное кол-во не должно быть меньше заданного нижн его порога:
[[ "$realN" -lt "$mimN" ]] && echo "real: $realN < minN: $mimN">&2 && exit 1 

#chk "$ff" "Files for $realN days back from $day. (Not found $? files)" || exit 2

echo "$ff" |
 LANG=POSIX mergef -m -k=1,1 -k=2,2 -stdout -comm="<---ursl.gz merged for $realN days" |
awk -F* -v"OFS=*" '
BEGIN{
 prevDom="";
 prevPath="";
}

{
 if ( ($2!=prevPath || $1!=prevDom ) && prevDom ){ flush() };
 sessions+=$3;
 sess_ends+=$4;
 prevDom=$1;
 prevPath=$2;
}

END{ 
 flush();
}

function flush(){
 print prevDom, prevPath, sessions, sess_ends;
 sessions=0;
 sess_ends=0;
}
'

#>> out
#>>
#>> | field     |
#>> | --------- |
#>> | dom       |
#>> | path      |
#>> | sessions  |
#>> | sess_ends |

