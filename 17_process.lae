#!/usr/bin/env bash
#> urls.

#>>IN:
#>> google:
#>>  1   2     3   4  5       6        7   8   9     10      11
#>> uid second sz pz  bt exposureprice ad dom path sestart isview
#>> OR
#>> net_sites:
#>> uid second sid sz pz bt exposureprice secondprice divexpsecond ad network dom path sestart isview


#>> sorted by UID,SECOND:

lb=${1:?labels!}

lae -lb="$lb" '
my %sessions_count;
my %sessions_ends;
my %urls;

_{

 # кука по времени просматривает разные урлы (разные домены) и sestart для каждого домена - свой 
 # 25443534*1411888002*54731*1*68*-1*0*prosto-ma-ma.ru*/*1411888002*1
 # 25443534*1411888005*54474*3*29*-1*0*taruzina.ru*/blog/43343322378/nechto-chelovecheskoe..*1411888005*1
 # 25443534*1411888006*23983*3*29*-1*0*gatchina24.ru*/gtn-pravda/gtn-pravda_10592.html*1411887999*0
 # 25443534*1411888010*54731*3*36*-1*0*prosto-ma-ma.ru*/*1411888002*0

 return if not $F[ISVIEW];
 
 #> when uid was changed:
 increment_counters() if Uid!=prevUid and prevUid;
 
 $urls{ $F[DOM] }{ $F[SESTART] }{ path }{ $F[PATH] }||=1;
 $urls{ $F[DOM] }{ $F[SESTART] }{ last } = $F[PATH];

} -prev=>"uid=0,sestart=0,dom,path";

increment_counters();

sub increment_counters{
 #> sessions counters:
 for my $dom ( keys %urls ){
    for my $sestart ( keys %{ $urls{$dom} } ){
	for my $path ( keys %{ $urls{$dom}{$sestart}{path} } ){
	    $sessions_count{ $dom."*".$path }++;
	}
	#> sessions_end counter:
	$sessions_ends{ $dom."*".$urls{$dom}{$sestart}{last} }++;
    }
 }
    
 undef %urls;
}

for my $ref ( keys %sessions_count ){
    # ( $ref - joined Dom*Path )
    p0 $ref, $sessions_count{ $ref }, $sessions_ends{ $ref };
}

' | LANG=POSIX sort -T. -S 333M -t\* -k1,1 -k2,2

#>>OUT:
#>> dom, ref, sessions_count, sessions_ends
#>>  
#>> | field          | description |
#>> | -------------- | ----------- |
#>> | dom  |
#>> | path |
#>> | sessions_count | количество сессий, где dom+url участвовал |
#>> | sessions_ends  | количество сессий, где он был последним.  |





