#!/usr/bin/env bash
#> Часы (YYYY-MM-HH.gz) ---------( через $posfilter )-----> $job/$tn/total.gz (в сутки)
(
set -u
set +x
set -o pipefail
cd `dirname $0`

#>:параметр:
job=${1:? Job! }
#>:параметр:
typenum=${2:? Typenum! }
#> days:
day=${3:-""} # можно указать day

variant=${4-""} # можно указать вариант типа "url"

deb=${5:-""} # млжно указать deb
[[ -n "$deb" ]] && deb="-d" && set -x


# некоторые комбинации job+typenum не обрабатываются:
silent_exit=$( href -dict="
	net_sites => { 3=>'exit'},
    " -val="$job" -val="$typenum"
)
[[ -n "$silent_exit" ]] && exit 0

#>:Имя скрипта $postfilter зависит от $job и $typenum:
suffix=""
[[ -n "$variant" ]] && suffix="_$variant"
postfilter="./12_postf_${job}_tn${typenum}${suffix}"
[[ -x "$postfilter" ]] || exit 3 # выход без ошибок в лог при отсутствии скрипта
#chk "$postfilter" "postfilter script" "-x" "exists and executable" noprint || exit 2

#>: prefilter определяет скрипт, который может обработать отдельные потоки файлов до merge: 
prefilter="./12_pref_${job}_tn${typenum}${suffix}"
[[ -x "$prefilter" ]] || prefilter="cat"

# Набор ключей для mergef тоже зависит от job и typenum и variant:
varopt="base" # когда не указан $variant
[[ -n "$variant" ]] && varopt="$variant"
mkeys=$( href -v="$job" -v="$typenum" -v="$varopt" -dict='
 "google" => 		{ 0 => {base=>"1,1n 2,2n", url=>"1,1 2,2"}, 1 => {base=>"1,1n 2,2n"}, 3 => {base=>"1,1n 2,2n", url=>"1,1 2,2"} },
 "ssp_sites" =>		{ 0 => {base=>"1,1n 2,2n", url=>"1,1 2,2"}, 1 => {base=>"1,1n 2,2n"}, 3 => {base=>"1,1n 2,2n", url=>"1,1 2,2"} },
 "net_sites" =>		{ 0 => {base=>"1,1n 2,2n", url=>"1,1 2,2"}, 1 => {base=>"1,1n 2,2n"}},
' )
[[ -z "$mkeys" ]] && exit 1
#chk "$mkeys" "Ключи для mergef по $job и $typenum и $variant" || exit 1

if [[ -n "$day" ]]; then
    find_path=../RESULT/10/$day/
else
    find_path=../RESULT/10/
fi

#> не обрабатываются часовые данные, где рядом уже есть total.gz
#> не обрабатываются часовые данные с размером меньше или равно 20 байт

# допускается только 22 часа, тогда формируется ссылка с именем total.gz
# фильтр --without=total.gz не даст пересчитать total, если появился 24-й час
# это уберегает от разногласий в производных файлах - они все должны исходить из одной версии total.
# если нужно - таки пересчитать неполный total - удаляем существующий, при этом следить за производными данными. 

[[ ! -d "$find_path" ]] && exit 0

total_prefix=""
[[ -n "$variant" ]] && total_prefix="${variant}_"

hour_prefix=""
[[ -n "$variant" ]] && hour_prefix=$(href -v="$job" -v="$typenum" -v="$varopt" -dict='
    google    =>  {0 => { url => "url_", base=>"" }},
    ssp_sites =>  {0 => { url => "url_", base=>"" }},
    net_sites =>  {0 => { url => "" ,    base=>"" }}, # net_sites тотал по урлам берут из обычных часовых файлов
' )

find "$find_path" -type f -wholename "*/$job/$typenum/${hour_prefix}[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9].gz" |
 only --without="${total_prefix}total.gz" |
 only -sizegt=20 |
 LANG=POSIX mergef -tt="${total_prefix}total.gz" -reverse -allow-empty -least=24 -having='m/T03/' --incomplete='22: %t_%n_hours.%e' \
    -m -k="$mkeys" -prefilter="$prefilter" -postfilter="$postfilter" \
    -on_another="silent_skip" -timelog=00_all.time.log


)>>"$0.log" 2>&1

