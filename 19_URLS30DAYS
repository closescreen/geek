#!/usr/bin/env bash
#>> test test test
#> urls.gz -----(19_process)---------->scala.urls30days.gz
(
set -u
set +x
set -o pipefail
cd `dirname $0`

minN=10 # minimum days. За сколько дней суммировать файлы. Minimum.
maxN=30 # Maximim (wanted).
job=${1:?Job!} # f.e. google
deep=`conf 00_conf.txt report_deep` # "<--- считать этот отчет на расчетные даты не старше report_deep из конфа"
days=${2:-""} # можно указать day

deb=${3:-""} # можно указать deb

# пока отключаю
# если указать  парам 'scala' ,то будет вызван обработчик потока на scala, альтернатива = "":
#processor=`href -dict="scala=>'./19_process.sc'" -defa='./19_process' -value=${4:-"nan"}` 
processor=./19_process



[[ -n "$deb" ]] && set -x

typenum=`href -dict="net_sites => '0'" -default="3" -val="$job"`

# возможные имена уже существующих файлов: (urls5days.gz urls6days.gz .. urls30days.gz)
# и тогда не пересчитывать, если хотяб один уже есть.
urlsNdays_possible_names=`perl -e'
 ($min,$max)=@ARGV;
 print join " ", map {"urls${_}days.gz"} $min..$max;
' $minN $maxN`
        

if [[ -n "$days" ]]; then
    ff=`echo "$days" | files "../RESULT/10/%F/$job/$typenum/urls.gz" | only -s`
else
    ff=`find ../RESULT/10 -wholename "*/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/$job/$typenum/urls.gz" | sort -r | 
    only --without="$urlsNdays_possible_names" |
    only --without="url_groups.gz"`
fi 

# минимальное кол-во urls.gz (minN) должно иметься для каждого:
ff=` echo "$ff" | only '[[ $(fn2days %f | hours -n=-'$minN'days -shift=1day -days | files "../RESULT/10/%F/'"$job/$typenum"'/urls.gz" | only -s -all  ) ]]' `

#ff=$( echo "$ff" | only --upto="$deep" )

[[ -n "$ff" ]] || exit 1

maxf=`conf 00_conf.txt maxf`
echo "$ff" | washing -maxf="$maxf" -res="
 my (\$path) = m|(.+)/urls\.gz|;
 my \$N=qx(
    fn2days \$_ | hours -shift=1day -n=-${maxN}days -days|files ../RESULT/10/\%F/$job/$typenum/urls.gz| only -s|words -count
    # получая в $_ имя исходного ./.../.../urls.gz, получаем имя urlsNdays.gz для N существующих предыдущих файлов urls.gz
 );
 \$_=\"\$path/urls\${N}days.gz\"
" -d -v_flag="$processor %s $job $typenum $minN $maxN" -comp=gzip -timelog=00_all.time.log


)>>"$0.log" 2>&1
