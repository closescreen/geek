#!/usr/bin/env bash
#>> test test test
#> urls.gz -----(19_process)---------->scala.urls30days.gz
(
set -u
set +x
set -o pipefail
cd `dirname $0`

N=30 # days. За сколько дней суммировать файлы.
job=${1:?Job!} # f.e. google
deep=`conf 00_conf.txt report_deep` # "<--- считать этот отчет на расчетные даты не старше report_deep из конфа"
days=${2:-""} # можно указать day

deb=${3:-""} # можно указать deb

# пока отключаю
# если указать  парам 'scala' ,то будет вызван обработчик потока на scala, альтернатива = "":
#processor=`href -dict="scala=>'./19_process.sc'" -defa='./19_process' -value=${4:-"nan"}` 
processor=./19_process



[[ -n "$deb" ]] && set -x

typenum=`href -dict="net_sites => '0'" -default="3" -val="$job"`
      

if [[ -n "$days" ]]; then
    ff=`echo "$days" | files "../RESULT/10/%F/$job/$typenum/urls.gz" | only -s`
else
    ff=`find ../RESULT/10 -wholename "*/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/$job/$typenum/urls.gz" | sort | only --without="urls${N}days.gz"`
fi 

ff=` echo "$ff" | only '[[ $(fn2days %f | hours -n=-'$N'days -days | files "../RESULT/10/%F/'"$job/$typenum"'/urls.gz" | only -s -all  ) ]]' `

ff=$( echo "$ff" | only --upto="$deep" )

chk "$ff" "ff files" || exit 1

echo "$ff" | washing -res="s|urls\.gz|urls${N}days.gz|" -v_flag="$processor %s $job $typenum $N" -comp=gzip -timelog=all.time.log


)>>"$0.log" 2>&1
