#!/usr/bin/env bash
# Копипаста из 10_HOURS, только с указанием, какие часы собирать.
# Впоследствии можно переехать на него полностью.

#> history_log -------( jobscript )--------> ../RESULT/10/${day}/${job}/${typenum}/yyyy-mm-ddThh.gz
#>> Сбор часовых данных из hl.
#> Параметры: $job и $typenum.

(
set -u
set +x
set -o pipefail
cd `dirname $0`

#1:
job=${1:?JOB!} # google | net-forty-three, ...

#2:
typenum=${2:?TYPENUM!} # 0|1|3

#3:
hours=${3:?HOURS!} # нужно указать список часов "yyyy-mm-ddThh ..." или один день "yyyy-mm-dd"

if [[ `echo "$hours" | awk '{print NF}'` == 1 ]]; then
 # если в $hours содержится одно слово (день)
    day=$hours
    hours=`hours -t="$day"T04 -n=24 -r` # вычислили часы, соответствующие указанному дню
fi

#4:
variant=${4:-""} # можно указать суффикс типа "url", обозначая вариант скрипта+результата

#5:
deb=${5:-""}
[[ "$deb" ]] && set -x

# некоторые комбинации job+typenum не обрабатываются:
silent_exit=$( href -dict="
	net => { 3=>'exit'},
    " -val="$job" -val="$typenum"
)
[[ -n "$silent_exit" ]] && exit 0

action=$( href -dict="
    ssp => 'src=/usr/local/rle/var/share3/DATA/dicts/ssp_sites.txt; [[ -s \$src ]] && cp -f \$src ./ssp_sites.txt',
    net => 'src=/usr/local/rle/var/share3/DATA/dicts/network_sites.txt; [[ -s \$src ]] && cp -f \$src ./network_sites.txt',
    " -val=$job 
)
[[ -n "$action" ]] && eval $action

google_sid=`conf 00_conf.txt google_sid`
mail_sid=`conf 00_conf.txt mail_sid`
sids=$( href -dict="
    ssp=>\"` cat ssp_sites.txt | cut -f1 | grep -v $google_sid | grep -v $mail_sid | words -fu=sortnu -ot='|' `\", # <--- google отфильтровывается
    google=>"$google_sid", # see 00_conf.txt
    mail=>"$mail_sid", # see 00_conf.txt
    net=> \"` cat network_sites.txt | addf -df=<(cat ssp_sites.txt | cut -f1) | awk -F* '!$2{print $1}' | words -fu=sortnu -ot='|' `\",
    " -val="$job"
)
chk "$sids" || exit 1


suffix=""
[[ -n "$variant" ]] && suffix="_$variant"
jobscript="./10_${job}_tn${typenum}${suffix}"

chk "$jobscript" "Job script" "-x" "exists and executable" noprint || exit 1


files=` echo "$hours" | files "../RESULT/10/%( hours -t=%f -n=-4 -first -day )/$job/$typenum/%FT%H.gz" `

echo "$files" | words |
  washing -time=00_all.time.log -cmd="$jobscript %f \"$sids\" \"$deb\"" -comp=gzip  

)>>"$0.log" 2>&1
