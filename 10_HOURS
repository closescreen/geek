#!/usr/bin/env bash
#> history_log -------( jobscript )--------> ../RESULT/10/${day}/${job}/${typenum}/yyyy-mm-ddThh.gz
#>> Сбор часовых данных из hl.
#> Параметры: $job и $typenum.

(
set -u
set +x
set -o pipefail
cd `dirname $0`

job=${1:?JOB!} # google | net-forty-three, ...
typenum=${2:?TYPENUM!} # 0|1|3
day=${3:-""} # можно указать ОДИН day "yyyy-mm-dd"
variant=${4:-""} # можно указать суффикс типа "url", обозначая вариант скрипта+результата
deb=${5:-""}

[[ "$deb" ]] && set -x

# некоторые комбинации job+typenum не обрабатываются:
silent_exit=$( href -dict="
	net => { 3=>'exit'},
    " -val="$job" -val="$typenum"
)
[[ -n "$silent_exit" ]] && exit 0

action=$( href -dict="
    ssp => 'cp -f /usr/local/rle/var/share3/DATA/dicts/ssp_sites.txt ./ssp_sites.txt',
    net => 'cp -f /usr/local/rle/var/share3/DATA/dicts/network_sites.txt ./network_sites.txt',
    " -val=$job 
)
[[ -n "$action" ]] && eval $action

google_sid=`conf 00_conf.txt google_sid`
mail_sid=`conf 00_conf.txt mail_sid`
sids=$( href -dict="
    ssp=>\"` cat ssp_sites.txt | cut -f1 | grep -v $google_sid | grep -v $mail_sid | words -fu=sortnu -ot='|' `\", # <--- google отфильтровывается
    google=>"$google_sid", # see 00_conf.txt
    # OLD: net=>\"` cat network_sites.txt | words -fu=sortnu -ot='|' `\",
    net=> \"` cat network_sites.txt | addf -df=<(cat ssp_sites.txt | cut -f1) | awk -F* '!$2{print $1}' | words -fu=sortnu -ot='|' `\",
    " -val="$job"
)
chk "$sids" || exit 1

#>: Каждой комбинации $job и $typenum [+$suffix] соответствует свой скрипт сбора.
suffix=""
[[ -n "$variant" ]] && suffix="_$variant"
jobscript="./10_${job}_tn${typenum}${suffix}"

chk "$jobscript" "Job script" "-x" "exists and executable" noprint || exit 1

#> Если присутствует total.gz то часовые данные не собираются.
#> Часы группируются в папки по суткам с 04.00 до 04.00.

if [[ -n "$day" ]]; then
    hh=`hours -t="$day"T04 -n=24 -r | only -older=$(date +"%FT%H")` # (reversed order!)  ( only older current hour )
else
    #>: период, за который собрать данные (если их еще нет)
    period=`conf 00_conf.txt source_deep` 
    hh=`hours -t=todayT04 -n=-"$period" -r`
fi


maxf=`conf 00_conf.txt maxf`
maxf=$(($maxf*24))

prefix=""
[[ -n "$variant" ]] && prefix="${variant}_"

files=` echo "$hh" | files "../RESULT/10/%( hours -t=%f -n=-4 -first -day )/$job/$typenum/${prefix}%FT%H.gz" `
[[ -z "$day" ]] && files=`echo "$files" | only --without="${prefix}total.gz urls.gz bids.gz"` # ограничиваем список, если день не указан
files=`echo "$files" | only -older=0days` # не запрашивать сегодняшние часы, а то захламляется лог

echo "$files" | words |
  washing -time=00_all.time.log -cmd="$jobscript %f \"$sids\" \"$deb\"" -comp=gzip -max=$maxf 
  # почему max: собирается долго, за это время некоторые файлы выйдут из периода

)>>"$0.log" 2>&1
